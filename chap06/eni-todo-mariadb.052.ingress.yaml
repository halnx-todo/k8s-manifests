apiVersion: v1
kind: Service
metadata:
  name: mariadb
  labels:
    app: mariadb
spec:
  ports:
  - port: 3306
    name: mariadb
  selector:
    app: mariadb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-config
data:
  mysql-user: "springuser"
  mysql-database: "db_todo"
  mysql-replica-user: "replication_user"
---
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-secret
data:
  mysql-password: bXlwYXNzd29yZC1xdW9vci11aG9lN3o=
  mysql-replica-password: bXVjMHlpdGVqYWhw
  mysql-root-password: cjAwdC1hZWtpZThhaHdhaV8=
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mariadb
  name: mariadb
spec:
  selector:
    matchLabels:
      app: mariadb 
  serviceName: "mariadb"
  replicas: 1 
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      volumes:
      - name: test-volume
        emptyDir: {}          
      containers:
      - image: mariadb:10.5.8
        name: mariadb
        resources:
          requests:
            cpu : "50m"
            memory: "512Mi"
          limits:
            cpu : "2000m"
            memory: "1024Mi"
        env:
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: mariadb-config
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mysql-password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mariadb-config
              key: mysql-database
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mysql-root-password
        - name: MYSQL_REPLICA_USER
          valueFrom:
            configMapKeyRef:
              name: mariadb-config
              key: mysql-replica-user
        - name: MYSQL_REPLICA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mysql-replica-password
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: test-volume
        ports:
          - name: mariadb 
            containerPort: 3306
            protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: khoolsa
  namespace: example
---
# this should be tuned to have a more reduce access
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: view
  namespace: example
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: khoolsa
  namespace: example
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: eni-todo
  name: eni-todo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: eni-todo
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eni-todo
    spec:
      volumes:
      - name: file-volume
        emptyDir: {}          
      serviceAccount: khoolsa
      containers:
      - image: kanedafromparis/khoolsession:eni-todo
        imagePullPolicy: Always
        name: eni-todo-tomcat-mariadb
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SPRING_PROFILES_ACTIVE
          value: "tomcat-mariadb-kub"
        - name: DB_DTB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mariadb-config
              key: mysql-user
        - name: DB_DTB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mysql-password
        - name: DB_DTB_JDBC_URL
          value: "jdbc:mysql://mariadb-0.mariadb:3306/db_todo"
        - name: MULTIPART_LOCATION
          value: "/usr/local/tomcat/files"
        readinessProbe: 
          httpGet:
            path: "/eni-todo/index.html"
            port: 8080
            scheme : "HTTP"
            httpHeaders :
                - name : "x-kubeprob-header"
                  value : "startupProbe"
          initialDelaySeconds : 150 
          failureThreshold : 3 
          periodSeconds : 30
          successThreshold : 1
          timeoutSeconds : 2
        volumeMounts:
          - name: file-volume
            mountPath: "/usr/local/tomcat/files"
        ports:
        - name: http8080 
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu : "500m"
            memory: "512Mi"
          limits:
            cpu : "2000m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: eni-todo
  labels:
    app: eni-todo
spec:
  ports:
  - port: 8080
    name: http8080
  selector:
    app: eni-todo
  sessionAffinity: ClientIP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eni-todo
  annotations:
    nginx.ingress.kubernetes.io/app-root: /eni-todo
spec:
  rules:
  - host: eni-todo.diehard.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: eni-todo
            port:
              number: 8080